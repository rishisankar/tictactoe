{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","state","squares","Array","fill","xIsNext","winner","a","fetch","method","headers","response","json","responseJSON","this","setState","turn","queryString","window","location","search","urlParams","URLSearchParams","player","get","updateBoardState","interval","setInterval","clearInterval","i","body","JSON","stringify","pos","handleClick","console","log","pl","setPlayer","status","getPlayerDiv","restartGame","renderSquare","React","Component","Game","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85a89fec.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true,\n      winner: \"\",\n    };\n  }\n\n  async updateBoardState() {\n    try {\n      const response = await fetch(\"http://localhost:8000/get_board_state\", {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        }\n      });\n      const responseJSON = await response.json();\n      this.setState({\n        squares: responseJSON.state,\n        xIsNext: responseJSON.turn === \"X\",\n        winner: responseJSON.winner\n      });\n    } catch (e) {\n\n    }\n  }\n\n  componentDidMount() {\n    const queryString = window.location.search;\n    const urlParams = new URLSearchParams(queryString);\n    this.setState({\n      player: urlParams.get(\"p\")\n    })\n    this.updateBoardState();\n    const interval = setInterval(() => {\n      this.updateBoardState();\n    }, 500);\n    this.setState({\n      interval: interval\n    })\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.interval);\n  }\n\n  async handleClick(i) {\n    try {\n      const response = await fetch(\"http://localhost:8000/play_move\", {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          pos: i,\n          player: this.state.player\n        })\n      });\n      const responseJSON = await response.json();\n\n      this.setState({\n        squares: responseJSON.state,\n        xIsNext: responseJSON.turn === \"X\",\n        winner: responseJSON.winner\n      });\n    } catch (e) {\n\n    }\n  }\n\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.state.squares[i]}\n        onClick={() => this.handleClick(i)}\n      />\n    );\n  }\n\n  async restartGame() {\n    try {\n      const response = await fetch(\"http://localhost:8000/restart\", {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        },\n      });\n      console.log(this.state.player);\n\n      const responseJSON = await response.json();\n\n      this.setState({\n        squares: responseJSON.state,\n        xIsNext: responseJSON.turn === \"X\",\n        winner: responseJSON.winner\n      });\n    } catch (e) {\n\n    }\n  }\n\n  setPlayer(pl) {\n    this.setState({\n      player: pl\n    })\n  }\n\n  getPlayerDiv() {\n    if (this.state.player === \"X\" || this.state.player === \"O\") {\n      return <div className=\"player\">{\"Player \" + this.state.player}</div>\n    } else {\n      return (\n        <div className=\"playerSelect\">\n          Choose player: \n          <button className=\"choosePlayer\" onClick={() => this.setPlayer(\"X\")}>X</button>\n          <button className=\"choosePlayer\" onClick={() => this.setPlayer(\"O\")}>O</button>\n        </div>\n      )\n    }\n  }\n\n  render() {\n    let status;\n    if (this.state.winner) {\n      status = 'Winner: ' + this.state.winner;\n    } else {\n      status = 'Turn: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"main-wrapper\">\n        {this.getPlayerDiv()}\n        <div className=\"status\">{status}</div>\n        <button className=\"restartButton\" onClick={() => this.restartGame()}>Restart Game</button>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board />\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}